<html>
  <body>
    <nav
      class="sticky top-0 flex h-20 select-none items-center justify-between bg-gray-50 px-6 dark:bg-gray-950"
    >
      <a class="text-2xl font-medium text-gray-700 dark:text-gray-200" href="/">
        lewxdev
      </a>

      <div class="flex items-center gap-6 text-gray-600 dark:text-gray-300">
        <button
          class="flex h-8 w-8 items-center justify-center sm:hidden"
          id="mobile-menu"
        >
          <i class="bx bx-menu text-xl"></i>
        </button>

        <!-- TODO: links -->
        <div class="flex items-center gap-6 text-lg max-sm:hidden">
          <a href="#">about</a>
          <a href="#">projects</a>
          <a href="/blog">blog</a>
          <a href="#">contact</a>
        </div>

        <div class="h-8 w-[1px] bg-gray-400 dark:bg-gray-500"></div>

        <button class="flex h-8 w-8 items-center justify-center" id="toggle-id">
          <i class="bx bx-moon text-xl"></i>
        </button>
      </div>
    </nav>
    <nav
      class="fixed z-50 w-0 overflow-x-hidden bg-gray-50 text-gray-600 transition-all dark:bg-gray-950 dark:text-gray-300"
      id="side-nav"
    >
      <div class="flex h-dvh flex-col text-lg">
        <a class="p-6" href="#">about</a>
        <a class="p-6" href="#">projects</a>
        <a class="p-6" href="/blog">blog</a>
        <a class="p-6" href="#">contact</a>
      </div>
    </nav>
  </body>
</html>

<script is:inline>
  const MOBILE_MENU_ID = "mobile-menu";
  const SIDE_NAV_ID = "side-nav";

  const mobileMenu = document.getElementById(MOBILE_MENU_ID);
  const sideNav = document.getElementById(SIDE_NAV_ID);

  if (!mobileMenu || !sideNav)
    throw new Error(`missing "#${MOBILE_MENU_ID}" or "#${SIDE_NAV_ID}"`);

  const toggleVisibility = () => {
    sideNav.classList.replace("w-0", "w-dvw") ||
      sideNav.classList.replace("w-dvw", "w-0");
  };

  mobileMenu.addEventListener("click", toggleVisibility);
  sideNav.addEventListener("click", toggleVisibility);
</script>

<script is:inline>
  const TOGGLE_ID = "toggle-id";
  const INIT = "init";
  const TOGGLE = "toggle";
  const DARK = "dark";
  const LIGHT = "light";

  const button = document.getElementById(TOGGLE_ID);
  const icon = button?.querySelector("i");
  if (!button || !icon) throw new Error(`missing "#${TOGGLE_ID}" or its icon`);

  const getValue = () =>
    /** @type {DARK | LIGHT | undefined} */
    (localStorage?.getItem(TOGGLE_ID)?.match(`^${DARK}|${LIGHT}$`)?.at(0));

  /** @param {INIT | TOGGLE} action */
  const setValue = (action) => {
    const value = getValue() || (prefersDark.matches ? DARK : LIGHT);
    const newValue = action === INIT ? value : value === DARK ? LIGHT : DARK;

    document.documentElement.classList.toggle(DARK, newValue === DARK);
    icon.className = `bx ${newValue === DARK ? "bx-sun" : "bx-moon"} text-xl`;
    if (action === TOGGLE) localStorage?.setItem(TOGGLE_ID, newValue);
  };

  const prefersDark = matchMedia("(prefers-color-scheme: dark)");

  prefersDark.addEventListener("change", () => !getValue() && setValue(INIT));
  button.addEventListener("click", () => setValue(TOGGLE));
  setValue(INIT);
</script>
